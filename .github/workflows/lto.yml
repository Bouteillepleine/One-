name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP13r-A15"
  BRANCH: "android14-6.1"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CCACHE_DIR: ${{ github.workspace }}/.ccache

jobs:
  build-release:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Free Disk Space
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/local/lib/android /opt/ghc /usr/local/share/boost

      - name: Setup Build Environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            bc bison build-essential ccache cmake curl flex \
            git libdw-dev libelf-dev libssl-dev lld llvm \
            ninja-build python3-dev python3-pip rsync unzip \
            wget zip zlib1g-dev

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.3
        with:
          key: ${{ runner.os }}-kernel-${{ env.BRANCH }}
          max-size: 4G

      - name: Install Latest Pahole
        run: |
          sudo apt-get remove --purge -y dwarves || true
          git clone --depth=1 --recurse-submodules https://git.kernel.org/pub/scm/devel/pahole/pahole.git
          cd pahole
          mkdir build
          cd build
          cmake -D__LIB=lib ..
          make -j$(nproc)
          sudo make install
          cd ../..

      - name: Setup Python Environment
        run: |
          python3 -m pip install --upgrade pip wheel
          pip3 install --user gitpython xmltodict

      - name: Configure Repo Tool
        run: |
          mkdir -p ~/.bin
          curl -sL https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+rx ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH

      - name: Initialize Build Directory
        id: build-dir
        run: |
          build_dir="${ROOT_DIR_PREFIX}-$(date +'%Y%m%d')-${GITHUB_SHA:0:7}"
          echo "ROOT_DIR=${build_dir}" >> $GITHUB_ENV
          mkdir -p "builds/${build_dir}"
          echo "::set-output name=path::builds/${build_dir}"

      - name: Clone Dependencies
        working-directory: ${{ steps.build-dir.outputs.path }}
        run: |
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3
          git clone -b gki-android14-6.1 --single-branch https://gitlab.com/simonpunk/susfs4ksu.git
          git clone --filter=blob:none https://github.com/WildPlusKernel/kernel_patches.git

      - name: Initialize Kernel Source
        working-directory: ${{ steps.build-dir.outputs.path }}
        run: |
          mkdir -p kernel_platform/oneplus13r_v
          cd kernel_platform/oneplus13r_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
            -b oneplus/sm8650 \
            -m oneplus_13r.xml \
            --depth=1
          repo sync -c -j$(nproc) --force-sync --no-clone-bundle --no-tags

      - name: Integrate KernelSU
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          curl -fsSL "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          git submodule update --init --recursive --depth=1

      - name: Apply SUSFS Patches
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          set -e
          cp -r ../../../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp -r ../../../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          
          patches=(
            "50_add_susfs_in_gki-android14-6.1.patch"
            "69_hide_stuff.patch"
            "next/next_hooks.patch"
            "next/syscall_hooks.patch"
          )
          
          for patch in "${patches[@]}"; do
            patch -p1 --forward < "../../../kernel_patches/${patch}" || true
          done

      - name: Configure Kernel Options
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          set -e
          CONFIGS=(
            "CONFIG_KSU=y"
            "CONFIG_KSU_WITH_KPROBES=n"
            "CONFIG_KSU_SUSFS=y"
            "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y"
            "CONFIG_KSU_SUSFS_SUS_PATH=y"
            "CONFIG_KSU_SUSFS_SUS_MOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y"
            "CONFIG_KSU_SUSFS_SUS_KSTAT=y"
            "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n"
            "CONFIG_KSU_SUSFS_TRY_UMOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y"
            "CONFIG_KSU_SUSFS_SPOOF_UNAME=y"
            "CONFIG_KSU_SUSFS_ENABLE_LOG=y"
            "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y"
            "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y"
            "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y"
            "CONFIG_KSU_SUSFS_SUS_SU=n"
            "CONFIG_TMPFS_XATTR=y"
            "CONFIG_TMPFS_POSIX_ACL=y"
            "CONFIG_IP_NF_TARGET_TTL=y"
            "CONFIG_IP6_NF_TARGET_HL=y"
            "CONFIG_IP6_NF_MATCH_HL=y"
            "CONFIG_SCHED_CLASS_EXT=y"
            "CONFIG_SMP=y"
            #"CONFIG_TCP_CONG_ADVANCED=y"
            #"CONFIG_TCP_CONG_BBR=y"
            #"CONFIG_NET_SCH_FQ=y"
            #"CONFIG_TCP_CONG_BIC=n"
            #"CONFIG_TCP_CONG_WESTWOOD=n"
            #"CONFIG_TCP_CONG_HTCP=n"
            "CONFIG_LTO=y"
            "CONFIG_LTO_CLANG_FULL=y"
            "CONFIG_LTO_CLANG_THIN=n"
          )
          for CONFIG in "${CONFIGS[@]}"; do
            echo "$CONFIG" >> ./common/arch/arm64/configs/gki_defconfig
          done
          sed -i '2s/check_defconfig//' ./common/build.config.gki

      - name: Clean Kernel Version Strings
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          sed -i 's/check_defconfig//' ./common/build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res"|' ./common/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "\$res"|' ./msm-kernel/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "\$res"|' ./external/dtc/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          sed -i 's/-dirty//' ./common/scripts/setlocalversion
          sed -i 's/-dirty//' ./msm-kernel/scripts/setlocalversion
          sed -i 's/-dirty//' ./external/dtc/scripts/setlocalversion
          sed -i 's/-dirty//' ./build/kernel/kleaf/workspace_status_stamp.py || echo "No workspace_status_stamp.py!"

      - name: Build Kernel
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v
        run: |
          export KBUILD_BUILD_USER="GitHubActions"
          export KBUILD_BUILD_HOST="gh-runner"
          
          cd kernel_platform
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs=$(nproc) \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom

      - name: Download SUSFS Module
        working-directory: ${{ steps.build-dir.outputs.path }}/AnyKernel3
        run: |
          wget -q --show-progress \
            https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip \
            -O susfs_module.zip
          unzip -oj susfs_module.zip
          rm susfs_module.zip

      - name: Package Kernel Image
        working-directory: ${{ steps.build-dir.outputs.path }}
        run: |
          cp kernel_platform/oneplus13r_v/kernel_platform/out/dist/Image AnyKernel3/
          
          cd AnyKernel3
          zip_name="WildPlusKernel-OP13r-$(date +'%Y%m%d').zip"
          zip -r9 "../${zip_name}" .
          echo "ZIP_PATH=${zip_name}" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ env.ROOT_DIR }}
          path: ${{ steps.build-dir.outputs.path }}/${{ env.ZIP_PATH }}
