name: OnePlus 13R Kernel Builder

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  ROOT_DIR_PREFIX: "OP13r-A15"
  KERNEL_TARGET: "pineapple"
  CLANG_VERSION: "clang-r487747c"
  ANY_KERNEL_REPO: "https://github.com/Kernel-SU/AnyKernel3"

jobs:
  build-release:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    - name: Initialize Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential ccache curl flex git libelf-dev libssl-dev \
          make ninja-build python3-dev python3-pip rsync unzip wget zip

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        path: src

    - name: Setup Build Directory
      run: |
        ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y%m%d-%H%M%S')"
        echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
        mkdir -p "build/${ROOT_DIR}"
        ln -s "$(pwd)/src" "build/${ROOT_DIR}/src"

    - name: Setup Toolchains
      working-directory: build/${{ env.ROOT_DIR }}
      run: |
        mkdir -p toolchains
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/$CLANG_VERSION.tar.gz
        tar xzf $CLANG_VERSION.tar.gz -C toolchains/
        echo "CLANG_BIN=$(pwd)/toolchains/bin" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$(pwd)/toolchains/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Clone Dependencies
      working-directory: build/${{ env.ROOT_DIR }}
      run: |
        git clone $ANY_KERNEL_REPO AnyKernel3
        git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
        git clone https://github.com/WildPlusKernel/kernel_patches.git

    - name: Initialize Kernel Source
      working-directory: build/${{ env.ROOT_DIR }}
      run: |
        mkdir -p kernel_platform/oneplus13r_v
        cd kernel_platform/oneplus13r_v
        repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
          -b oneplus/sm8650 \
          -m oneplus_13r.xml \
          --depth=1
        repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags

    - name: Apply KernelSU
      working-directory: build/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
      run: |
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
        git submodule update --init --recursive
        KSU_VERSION=$(( $(git -C KernelSU-Next rev-list --count HEAD) + 10200 ))
        echo "KSU_VERSION=${KSU_VERSION}" >> $GITHUB_ENV

    - name: Apply SUSFS Patches
      working-directory: build/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
      run: |
        set -xe
        cp -r ../susfs4ksu/kernel_patches/fs ./common/
        cp -r ../susfs4ksu/kernel_patches/include/linux ./common/include/
        patch -p1 < ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch || exit 1
        patch -p1 < ../kernel_patches/69_hide_stuff.patch || exit 1
        patch -p1 < ../kernel_patches/next/next_hooks.patch || exit 1
        patch -p1 < ../kernel_patches/next/syscall_hooks.patch || exit 1

    - name: Configure Kernel Options
      working-directory: build/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
      run: |
        set -xe
        CONFIG_FILE="./common/arch/arm64/configs/gki_defconfig"
        
        # KernelSU Configuration
        ./scripts/config --file $CONFIG_FILE \
          --enable CONFIG_KSU \
          --disable CONFIG_KSU_WITH_KPROBES \
          --enable CONFIG_KSU_SUSFS \
          --enable CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT \
          --enable CONFIG_KSU_SUSFS_SUS_PATH \
          --enable CONFIG_KSU_SUSFS_SUS_MOUNT \
          --enable CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT \
          --enable CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT \
          --enable CONFIG_KSU_SUSFS_SUS_KSTAT \
          --disable CONFIG_KSU_SUSFS_SUS_OVERLAYFS \
          --enable CONFIG_KSU_SUSFS_TRY_UMOUNT \
          --enable CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT \
          --enable CONFIG_KSU_SUSFS_SPOOF_UNAME \
          --enable CONFIG_KSU_SUSFS_ENABLE_LOG \
          --enable CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS \
          --enable CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG \
          --enable CONFIG_KSU_SUSFS_OPEN_REDIRECT \
          --disable CONFIG_KSU_SUSFS_SUS_SU

        # Filesystem
        ./scripts/config --file $CONFIG_FILE \
          --enable CONFIG_TMPFS_XATTR \
          --enable CONFIG_TMPFS_POSIX_ACL

        # Network
        ./scripts/config --file $CONFIG_FILE \
          --enable CONFIG_IP_NF_TARGET_TTL \
          --enable CONFIG_IP6_NF_TARGET_HL \
          --enable CONFIG_IP6_NF_MATCH_HL

        # Scheduler
        ./scripts/config --file $CONFIG_FILE \
          --enable CONFIG_SCHED_CLASS_EXT \
          --enable CONFIG_SMP

        # TCP Congestion
        ./scripts/config --file $CONFIG_FILE \
          --enable CONFIG_TCP_CONG_ADVANCED \
          --enable CONFIG_TCP_CONG_BBR \
          --disable CONFIG_TCP_CONG_BIC \
          --disable CONFIG_TCP_CONG_WESTWOOD \
          --disable CONFIG_TCP_CONG_HTCP

        # Queue Management
        ./scripts/config --file $CONFIG_FILE \
          --enable CONFIG_NET_SCH_FQ \
          --enable CONFIG_NET_SCH_FQ_CODEL \
          --enable CONFIG_NET_SCH_DEFAULT \
          --set-str CONFIG_DEFAULT_FQ "y"

        # Versioning
        ./scripts/config --file $CONFIG_FILE \
          --set-str CONFIG_LOCALVERSION "-KSU-${KSU_VERSION}"

        # LTO
        ./scripts/config --file $CONFIG_FILE \
          --enable CONFIG_LTO \
          --enable CONFIG_LTO_CLANG_FULL \
          --disable CONFIG_LTO_CLANG_THIN

        # Verify critical configs
        ./scripts/config --file $CONFIG_FILE --state CONFIG_KSU | grep -q "=y" || exit 1
        ./scripts/config --file $CONFIG_FILE --state CONFIG_TCP_CONG_BBR | grep -q "=y" || exit 1

    - name: Build Kernel
      working-directory: build/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
      run: |
        set -xe
        export PATH="$CLANG_BIN:$PATH"
        export ARCH=arm64
        export LLVM=1
        export KBUILD_BUILD_USER="GitHubActions"
        export KBUILD_BUILD_HOST="KernelBuilder"

        ./build_with_bazel.py \
          -t $KERNEL_TARGET \
          gki \
          --jobs=$(nproc --all) \
          --verbose_failures \
          --config=stamp \
          --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
          -o out

    - name: Package Artifacts
      working-directory: build/${{ env.ROOT_DIR }}
      run: |
        set -xe
        KERNEL_IMAGE="kernel_platform/oneplus13r_v/kernel_platform/out/dist/Image"
        [ -f "$KERNEL_IMAGE" ] || { echo "❌ Kernel image missing"; exit 1; }

        cp "$KERNEL_IMAGE" AnyKernel3/Image
        echo "KSU Version: $KSU_VERSION" > AnyKernel3/version
        echo "Build Date: $(date '+%Y-%m-%d %H:%M:%S')" >> AnyKernel3/version

        ZIP_NAME="OP13r-Kernel-${KSU_VERSION}-$(date +%Y%m%d).zip"
        cd AnyKernel3
        zip -r9 "../$ZIP_NAME" . -x ".git*" "README.md"
        echo "ZIP_PATH=$(pwd)/../$ZIP_NAME" >> $GITHUB_ENV

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-build
        path: ${{ env.ZIP_PATH }}

    - name: Cleanup
      if: always()
      run: rm -rf build/${{ env.ROOT_DIR }}
